@import "../../../styles.scss";

#choosing_panel {
  max-height: 100%;
  display: flex;
  flex: 1;
  align-items: stretch;
  justify-content: center;
  padding-top: 0.5vw;
  animation: panelAppear var(--animation-speed) linear forwards;
}

.character-choice {
  $character-width: 6.7vw;
  width: $character-width;
  height: 1.5 * $character-width;

  margin: 0 0.2vw;

  border: 0.3vw solid var(--player-selected-color);
  border-radius: 8%;

  @extend .character-select;
}

.big-character-choice {
  width: calc(0.42 * var(--your-player-width));
  height: calc(1.6 * 0.42 * var(--your-player-width));

  margin: 0 0.2vw;

  border: 0.2vw solid var(--player-selected-color);
  border-radius: calc(0.6vh + 0.6vw);

  @extend .character-select;
}

.character-select {
  cursor: pointer;
  @media (hover: hover) {
    &:hover {
      filter: grayscale(1);
    }
  }
}

.choice-btn {
  width: 25%;
  height: var(--button-height);

  margin: 0 0.375vw;

  font-size: calc(0.9vw + 0.9vh);
  font-weight: 300;
  text-transform: uppercase;

  background: var(--action-color);
  border: var(--border-width) solid var(--action-border-color);
  border-radius: calc(0.55vw + 0.55vh);
  @extend .choice-btn-effect;
}

.choice-btn-effect {
  // general
  position: relative;
  display: inline-block;
  vertical-align: middle;
  transform-style: preserve-3d;
  transition: transform 100ms cubic-bezier(0, 0, 0.58, 1), background 100ms cubic-bezier(0, 0, 0.58, 1);

  &::before {
    position: absolute;
    top: 0;
    left: 0;
    content: "";
    width: 100%;
    height: 100%;
    background: var(--action-shadow-color);
    box-shadow: 0 0 0 var(--border-width) var(--action-border-color);
    outline: 5px solid transparent;
    border-radius: inherit;
    transform: translate3d(0, calc(3 * var(--btn-step)), -1rem);
    transition: transform 100ms cubic-bezier(0, 0, 0.58, 1), box-shadow 100ms cubic-bezier(0, 0, 0.58, 1);
  }
  &:focus,
  &:active,
  &:focus:active {
    outline: none;
  }
  // enabled
  &:enabled {
    cursor: pointer;
    @media (hover: hover) {
      &:hover {
        background: var(--enabled-color);
        transform: translate(0, calc(1 * var(--btn-step)));
        &::before {
          transform: translate3d(0, calc(2 * var(--btn-step)), -1rem);
        }
      }
    }
    &:active {
      background: var(--enabled-color);
      transform: translate(0, calc(3 * var(--btn-step)));
      &::before {
        transform: translate3d(0, 0, -1rem);
      }
    }
  }
  &:disabled {
    &:before {
      opacity: 0.5;
    }
    border-color: #b2b2b2;
  }
}

.play-again-btn {
  @extend .btn2;
  margin: 0.75vh 0;
  width: 24vw;
  border-color: #666666;
  color: #666666;
  &:enabled {
    &:hover {
      background: #cccccc;
    }
  }
}

.play-again-disabled {
  opacity: 0.5;
}

.play-again-selected {
  background: #c0c0c0;
}

// animations

@keyframes panelAppear {
  from {
    filter: opacity(0%);
  }
}
